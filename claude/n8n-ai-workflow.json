{
  "name": "Teams to Jira AI Automation",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "teams-jira-ai",
        "responseMode": "responseNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "webhook-receiver",
      "name": "Teams Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "resource": "chatCompletion",
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an AI assistant that analyzes Teams messages for the 'GÃ¼ncelleme Planlama' channel and determines if they need Jira tickets. Extract key information like system names, versions, environments, and action types."
            },
            {
              "role": "user",
              "content": "={{ 'Analyze this message and extract Jira ticket information:\\n\\nMessage: ' + $json.text + '\\nSender: ' + $json.sender + '\\nTimestamp: ' + $json.timestamp + '\\n\\nDetermine:\\n1. Action type (update_completed, spread_completed, update_request, spread_request)\\n2. System/application name\\n3. Version\\n4. Environment\\n5. Priority (based on keywords and urgency)\\n6. Any additional technical details\\n\\nReturn as structured JSON.' }}"
            }
          ]
        },
        "options": {
          "temperature": 0.3,
          "responseFormat": {
            "type": "json_object"
          }
        }
      },
      "id": "ai-analysis",
      "name": "AI Message Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [450, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const aiAnalysis = JSON.parse($input.first().json.message.content);\nconst originalData = $node['Teams Webhook'].json;\n\nconst actionTypeMap = {\n  'update_completed': {\n    issueType: 'Task',\n    prefix: 'Update Completed',\n    priority: 'Low'\n  },\n  'spread_completed': {\n    issueType: 'Task',\n    prefix: 'Spread Deployment Completed',\n    priority: 'Low'\n  },\n  'update_request': {\n    issueType: 'Story',\n    prefix: 'Update Request',\n    priority: 'High'\n  },\n  'spread_request': {\n    issueType: 'Story',\n    prefix: 'Spread Deployment Request',\n    priority: 'High'\n  }\n};\n\nconst actionConfig = actionTypeMap[aiAnalysis.action_type] || {\n  issueType: 'Task',\n  prefix: 'Teams Message',\n  priority: 'Medium'\n};\n\nlet summary = `${actionConfig.prefix} - ${originalData.sender}`;\nif (aiAnalysis.system) {\n  summary += ` - ${aiAnalysis.system}`;\n}\nif (aiAnalysis.version) {\n  summary += ` (v${aiAnalysis.version})`;\n}\n\nlet description = `## Original Message\n${originalData.text}\n\n`;\ndescription += `**Sender:** ${originalData.sender}\n`;\ndescription += `**Channel:** ${originalData.channel}\n`;\ndescription += `**Timestamp:** ${originalData.timestamp}\n\n`;\n\nif (aiAnalysis.system) {\n  description += `**System/Application:** ${aiAnalysis.system}\n`;\n}\nif (aiAnalysis.version) {\n  description += `**Version:** ${aiAnalysis.version}\n`;\n}\nif (aiAnalysis.environment) {\n  description += `**Environment:** ${aiAnalysis.environment}\n`;\n}\nif (aiAnalysis.technical_details) {\n  description += `\n## Technical Details\n${aiAnalysis.technical_details}\n`;\n}\n\ndescription += `\n---\n*Automatically created from Microsoft Teams via AI analysis*`;\n\nconst labels = [\n  'teams-automation',\n  aiAnalysis.action_type,\n  originalData.channel.replace(/\\s+/g, '-').toLowerCase()\n];\n\nif (aiAnalysis.environment) {\n  labels.push(`env-${aiAnalysis.environment.toLowerCase()}`);\n}\n\nreturn {\n  issueType: actionConfig.issueType,\n  summary: summary,\n  description: description,\n  priority: aiAnalysis.priority || actionConfig.priority,\n  labels: labels,\n  customFields: {\n    teamsMessageId: originalData.messageId,\n    aiAnalysisConfidence: aiAnalysis.confidence || 'high'\n  },\n  components: aiAnalysis.system ? [aiAnalysis.system] : []\n};"
      },
      "id": "prepare-jira-data",
      "name": "Prepare Jira Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "resource": "issue",
        "operation": "create",
        "project": "={{ $env.JIRA_PROJECT }}",
        "issueType": "={{ $json.issueType }}",
        "summary": "={{ $json.summary }}",
        "description": "={{ $json.description }}",
        "additionalFields": {
          "priority": {
            "name": "={{ $json.priority }}"
          },
          "labels": "={{ $json.labels }}",
          "components": "={{ $json.components }}"
        }
      },
      "id": "create-jira",
      "name": "Create Jira Issue",
      "type": "n8n-nodes-base.jira",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "jiraApi": {
          "id": "jira-credentials",
          "name": "Jira API"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": true,\n  \"jiraIssue\": {\n    \"key\": \"={{ $json.key }}\",\n    \"id\": \"={{ $json.id }}\",\n    \"url\": \"={{ $env.JIRA_BASE_URL }}/browse/{{ $json.key }}\"\n  },\n  \"message\": \"Jira issue created successfully via AI analysis\"\n}",
        "options": {}
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"error\": \"={{ $json.error.message || 'Failed to create Jira issue' }}\",\n  \"details\": \"={{ JSON.stringify($json.error) }}\"\n}",
        "responseCode": 500,
        "options": {}
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [850, 500]
    }
  ],
  "connections": {
    "Teams Webhook": {
      "main": [
        [
          {
            "node": "AI Message Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Message Analysis": {
      "main": [
        [
          {
            "node": "Prepare Jira Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Jira Data": {
      "main": [
        [
          {
            "node": "Create Jira Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Jira Issue": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": ""
  }
}